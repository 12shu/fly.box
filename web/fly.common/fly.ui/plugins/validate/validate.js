fly.regPlugin("validate", function () { var $ = fly, $v = $.ui.Validate = function (_) { $.extend(this, _); this.init() }; $v.$extend({ ruleAttr: "rule", selector: ":input[{ruleAttr}]", isValidate: null, init: function () { var A = this; if (!this.items) { var _ = $(this.container || document); this.items = _.$(this.selector.format(this)) } this.items = $(this.items).select(function ($) { return new $v.item(A, $) }); this.bindEvent() }, validate: function (_, C, B) { var A = this, $ = this.items.selectMany(function ($) { return $.validate(_ ? null : (C || A.handler), _ ? null : (B || A.ruleErrorHandler)) }); this.isValidate = !$.length; return this.isValidate ? null : $ }, bindEvent: function () { this.items.each(function (_) { if (this.events) $.each(this.events, function (A, $) { if (_.events[$] == "") return; _.element.on(_.events[$] || $, function () { var $ = _.validate(); A.call(_, $, _.element) }) }) }, this) } }); $v.defaultErrMsg = "\u8f93\u5165\u6709\u8bef"; $v.rule = function (_, A) { var $ = this; this.owner = A; this.expr = _; this.extractMsg(); this.reg || (this.reg = $v.rule.regs[this.expr]); if (this.reg == null) { _ = _.replace(/^(\d*)-(\d*)$/, function (B, _, A) { _ && ($.minLen = Number(_)); A && ($.maxLen = Number(A)); return "" }); _ = _.replace(/^([><=!]+)(.+)$/g, function (B, A, _) { $.value = Number(_); isNaN($.value) && ($.value = _); $.operator = A; return "" }); _ = _.replace(/^(.+)->(.+)$/, function (B, _, A) { $.min = Number(_); isNaN($.min) && ($.min = _); $.max = Number(A); isNaN($.max) && ($.max = A); return "" }); _ && (this.values = _) } else { this.reg.init && this.reg.init(this.owner.element); this.reg.change && this.owner.element.change(this.reg.change) } }; $v.rule.extend({ extractMsg: function () { var $ = this; this.expr = this.expr.replace(/::(.*)$/, function (A, _) { $.msg = _; return "" }).replace(/:.*/, function (_) { $.option = _.substr(1).trim(); return "" }).trim() }, validate: function ($, A) { $ == null && ($ = ""); var _ = this.reg; if ($.length < this.minLen || $.length > this.maxLen) return this.minLen != null && this.maxLen != null ? this.minLen + "-" + this.maxLen + "\u4e2a\u5b57\u7b26" : ("\u6700" + ($.length > this.maxLen ? "\u591a" : "\u5c11") + this.minLen + "\u4e2a\u5b57\u7b26"); if (this.expr == "*" || $ != "") { if (_ && _.reg && !_.reg.test($)) return A || this.msg || this.reg.msg || $v.defaultErrMsg; if (this.min != null) { if (!$v.compareValue($, ">=", this.min) || !$v.compareValue($, "<=", this.max)) return "\u53ea\u80fd\u5728" + this.min + "\u5230" + this.max + "\u4e4b\u95f4" } else if (this.operator) { if (!$v.compareValue($, this.operator, this.value)) return "\u5fc5\u987b" + ($v.operatorName[this.operator] || this.operator) + this.value } else if (this.values) if (!("," + this.values + ",").contains("," + $ + ",", true)) return "\u53ea\u80fd\u662f:" + this.values } if (_ && _.check) { var B = _.check($, this); if (B === true) return null; if (B === false) return A || this.msg || this.reg.msg || $v.defaultErrMsg; return B } } }); $v.operatorName = { ">": "\u5927\u4e8e", "<": "\u5c0f\u4e8e", ">=": "\u5927\u4e8e\u7b49\u4e8e", "<=": "\u5c0f\u4e8e\u7b49\u4e8e", "==": "\u7b49\u4e8e", "!=": "\u4e0d\u7b49\u4e8e" }; $v.disabledIme = function (_) { $(_).css("ime-mode", "disabled") }; $v.compareValue = function (l, o, r) { $.isNumber(r) && (l = Number(l)); return eval("l" + o + "r") }; $v.rule.regs = { "*": { reg: /.+/, msg: "\u5fc5\u987b\u586b\u5199" }, "int": { reg: /^[-+]?\d+$/, msg: "\u53ea\u80fd\u4e3a\u6574\u6570" }, "+int": { reg: /^\+?\d+$/, msg: "\u53ea\u80fd\u4e3a\u6b63\u6574\u6570" }, "-int": { reg: /^-\d+$/, msg: "\u53ea\u80fd\u4e3a\u8d1f\u6574\u6570" }, "float": { reg: /^[-+]?\d+.?\d*$/, msg: "\u53ea\u80fd\u4e3a\u6570\u503c" }, "+float": { reg: /^\+?\d+.?\d*$/, msg: "\u53ea\u80fd\u4e3a\u6b63\u6570" }, "-float": { reg: /^-\d+.?\d*$/, msg: "\u53ea\u80fd\u4e3a\u8d1f\u6570" }, mail: { reg: /^([0-9a-z]+[-._+&])*[0-9a-z]+@([-0-9a-z]+[.])+[a-z]{2,6}$/i, msg: "\u90ae\u7bb1\u683c\u5f0f\u4e0d\u6b63\u786e" }, phone: { reg: /^(\d{3,4}-)?\d{7,20}$/, msg: "\u7535\u8bdd\u53f7\u7801\u6709\u8bef" }, same: { check: function (_, A) { return _ == $(A.option).value() ? null : "\u4e24\u6b21\u8f93\u5165\u4e0d\u4e00\u81f4" } }, reg: { check: function (val, rule) { try { if (rule.option.charAt(0) == "/") return eval(rule.option).test(val) } catch (e) { } return new RegExp(rule.option).test(val) } }, fun: { check: function (val, rule) { return eval(rule.option + ".call(rule.owner.owner,val,rule.owner.element,rule)") } }, "a-z": { reg: /^[a-z]$/, msg: "\u53ea\u80fd\u662f\u5c0f\u5199\u5b57\u6bcd" }, "A-Z": { reg: /^[A-Z]$/, msg: "\u53ea\u80fd\u662f\u5927\u5199\u5b57\u6bcd" }, "a-Z": { reg: /^[A-Z]$/i, msg: "\u53ea\u80fd\u662f\u5b57\u6bcd" }, trim: { change: function (A) { var _ = (A = $(A)).value(), B = _.replace(/^\s+|\s+$/g, ""); B != _ && A.value(B) } } }; "int,+int,-int,float,+float,-float,mail,phone,a-z,A-Z,a-Z".split(",").each(function ($) { $v.rule.regs[$].init = $v.disabledIme }); $v.item = function (A, _) { this.owner = A; this.element = $(_); this.init() }; $v.item.extend({ events: {}, isValidate: null, init: function () { this.ruleExpr = this.element.attr(this.owner.ruleAttr); this.rules = this.ruleExpr.replace(/\|\|/g, "~!/=<").split("|").selectNotNull(function (A) { A = A.replace(/~!\/=</g, "|"); if (A.startWith("events:")) this.events = A.substr(7, "").split(",").toJSON("o=>o.replace(/:.*/g,'')", "o=>o.replace(/.*:/g,'')"); else if (A.startWith("with:")) { var _ = A.substr(5); this.valueElement = $(_); if (!this.valueElement.length) alert('\u6839\u636e\u8868\u8fbe\u5f0f"' + this.ruleExpr + '"\u4e2d\u7684\u9009\u62e9\u5668"' + _ + '"\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u5143\u7d20') } else if (A.startWith("tips:")) this.tips = A.substr(5); else return new $v.rule(A, this) }, this); this.valueElement || (this.valueElement = this.element); this.valueElement.data("validateItem", this); this.element.data("validateItem", this); if (this.tips) { this.element.focus(function () { this.owner.handler(this.tips, this.element, true) }, this); if (this.owner.hideTipOnBlur) this.element.blur(function () { this.element.errorMsgBox && this.element.errorMsgBox.hide() }, this) } }, val: function () { var _ = this.valueElement[0]; if (_.getValue) return _.getValue(); if (_.type == "radio" && _.form) { var A = $.toArray(_.form[_.name]); _ = A.filter(":checked")[0]; if (_) return _.value; return null } return this.valueElement.val() }, validate: function (D, C) { var B = this, A = this.element, $ = this.val(), _ = this.rules.selectNotNull(function (_) { var D = _.validate($); D && C && C.call(B, D, A, _, $); return D }); D && D.call(B, _, A); return (this.isValidate = !_.length) ? null : _ } }); $v.defaultHandlers = { alert: function ($, _, A) { A != true && $.length && alert($) }, cssAndTitle: function (D, C, _, A, B) { return function (E, F, G) { if (E && E.length) { if (!G) { D && F.addClass(D); if (C != false) { F.oldTitle == null && (F.oldTitle = F.attr("title") || ""); F.attr("title", E) } } if ((_ != false && !G) || (A != false && G)) { if (!F.errorMsgBox) if ($.isFun(B)) F.errorMsgBox = $(B.call(this, F)); else if (B == null) F.errorMsgBox = $("<span class=f-v-msgBox ></span>").appendTo(F.parent()); else if ($.isStr(B)) F.errorMsgBox = $(B); F.errorMsgBox.html(E); F.errorMsgBox.changeClass(G ? "f-v-msgBox-error f-v-msgBox-right" : "f-v-msgBox-tips f-v-msgBox-right", G ? "f-v-msgBox-tips" : "f-v-msgBox-error"); F.errorMsgBox.show() } } else { D && F.removeClass(D); C != false && F.oldTitle != null && F.attr("title", F.oldTitle); if (F.errorMsgBox) F.errorMsgBox.html("&nbsp;").changeClass("f-v-msgBox-tips f-v-msgBox-error", F.value() == "" ? "" : "f-v-msgBox-right") } } }, cssAndTooltip: function (D, C, _) { var A = $v.defaultHandlers.cssAndTitle(D, C, false), B = function (_, A) { if ($.ui.Tooltip) _[0].tooltipBox = $.ui.Tooltip.show(_, null, { css: "f-tooltip-info" }) }; return function (C, D, E) { A(C, D, E); D = $(D); D.attr("tooltip", C); if (_ && !this.hideTipOnBlur) D.un("focus", B); if (D[0].tooltipBox) D[0].tooltipBox.destroy && D[0].tooltipBox.destroy(); if (C && C.length) if (_) { D.focus(B, D, D, E); if (document.activeElement == D[0]) B(D, E) } else { D[0].tooltipBox = new ui.Tooltip({ box: D, text: C }); D[0].tooltipBox.show() } } } } })