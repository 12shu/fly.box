fly.regPlugin("simplepager", function () { var A = fly, $ = A.ui, _ = A.Event, B = "first,previous,next,last,refresh"; $.SimplePager = A.Class({ constructor: function ($) { $ && A.extend(this, $); this.init() }, baseCss: "f-spager", els: {}, pageIndex: 1, pageCount: 0, start: 0, end: 0, total: 0, pageSize: 35, pageListCount: 10, onPage: _.createEventFn("page"), go: function ($, _) { if ($ != null) { $ = $ == "first" ? 0 : ($ == "previous" ? this.pageIndex - 1 : ($ == "next" ? this.pageIndex + 1 : ($ == "last" ? this.pageCount - 1 : $))); $ == "refresh" || ($ = Math.max(Math.min($, this.pageCount - 1), 0)) } var A = $ != this.pageIndex; $ != "refresh" && $ != null && (this.pageIndex = $); this.pageIndex = Math.max(0, Math.min(this.pageIndex, this.pageCount - 1)); this.start = this.pageIndex * this.pageSize; this.end = Math.min(this.total, this.start + this.pageSize) - 1; this.requestOption = { pageIndex: this.pageIndex, pageSize: this.pageSize, start: this.start, limit: this.pageSize }; if ((_ == true || A) && _ != false) this.fire("page", this, this.requestOption); this.update() }, refresh: function () { this.go("refresh") }, update: function ($, _) { if (arguments.length > 0) { this.pageIndex = $; this.pageCount = _ } this.els.info && this.els.info.html(this.infoFormat.format(this)); this.els.list && this.createPageList(); this.setState() }, setState: function () { this.els.previous.disable(this.pageIndex == 0); this.els.next.disable(this.pageIndex == this.pageCount - 1) }, createPageList: function () { var J = this, D = this.pageListCount, E = [], A = [], F = 0, K = (D + 3) / 4; while (K-- > 1) { E.push(F); D--; var B = this.pageCount - F - 1; if (B <= F) break; A.unshift(B); D--; F++; if (B <= F) break } var $ = E.length ? E.last() + 1 : 0, C = A.length ? A[0] - 1 : this.pageCount - 1, G = Math.max($, this.pageIndex - parseInt(D / 2)), M = Math.min(C, this.pageIndex + (D - parseInt(D / 2) - 1)), _ = (D - 1) - (M - G); while (_-- > 0) if (M < C) M++; else if (G > $) G--; else break; while (G <= M) { if (G >= $ && G <= C) E.push(G); G++ } E.addRange(A); var H = -1, L = -1, I = E.select(function ($, A) { var _ = ""; if ($ > L + 1) _ = ".."; if ($ == J.pageIndex) H = A; L = $; return _ + J.listItemFormat.format($, $ + 1, J) }).join(""); this.els.list.html(I); this.els.list.$(">").eq(H).addClass(J.baseCss + "-current-page") }, init: function () { var $ = this; A.each(this.els, function (_, B) { A.ui.DomHelper.addClass(_, B == "container" ? $.baseCss : $.baseCss + "-" + B) }); this.els.previous && this.els.previous.click(this.go, this, "previous"); this.els.next && this.els.next.click(this.go, this, "next"); this.els.list && this.els.list.click(function () { var _ = $event.target; while (_ != $.els.list[0]) { var A = _.getAttribute("page"); if (A) { $.go(parseInt(A)); break } _ = _.parentNode } }); this.els.container.dblclick(function () { A.DomHelper.unSelection() }) }, listItemFormat: '<a page="{0}" title="\u7b2c{1}\u9875">{1}</a>', infoFormat: '<font title="\u7b2c{pageIndex+1}\u9875\uff0c\u5171{pageCount}\u9875">{pageIndex+1}/{pageCount} \u9875</font>' }) })