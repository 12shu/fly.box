(function ($) { fly.ui.TagsEditor = $.Class({ constructor: function (_) { var A = this; fly.ui.TagsEditor.last = this; $.extend(this, _); this.createMember(); this.bindEvents(); if (this.tags) this.addTags(this.tags) }, emptyValue: "\u7528\u9017\u53f7\u6216\u56de\u8f66\u5206\u9694", getTags: function () { return this.editor.$(".tag").select("o=>o.tag") }, onAddTag: $.Event.createEventFn("addtag"), onDeleteTag: $.Event.createEventFn("deletetag"), onExists: function (_, $) { $ && alert(this.getTagText(_) + " \u5df2\u7ecf\u6dfb\u52a0"); return false }, getTagText: function ($) { return $.text || $.name || $ }, getTagKey: function ($) { return $.id || $.value || $ }, getTagTitle: function ($) { return $.title || this.getTagText($) }, getTagUrl: function ($) { return $.url || $.href }, getTagNode: function (_) { var A = this, $ = this.getTagKey(_); return this.editor.$(".tag").first(function (_) { return A.getTagKey(_.tag) == $ }) }, tagFormat: '<div class=tag title="{1}" ><a target=_blank >{0}</a><span class=tag-delete >x</span></div>', addTag: function (A, _) { var D = this; if (!A) return; if (this.getTagNode(A)) if (!this.onExists(A, _)) return false; if (this.onBeforeAddTag && this.onBeforeAddTag(A) == false) return false; var C = this.tagFormat.format(this.getTagText(A), this.getTagTitle(A), A), B = $(C); B.$("span").mousedown(function () { D.deleteTag(A); return false }); B[0].tag = A; var E = this.getTagUrl(A); if (E) B.$("a").attr("href", E); this.onAddTag.fire(this, this, A); if (this.input[0] && this.inputInEditor) this.input.before(B); else this.editor.append(B); return true }, addTags: function (_) { this.input[0] && this.input[0].emptyBox.value(""); _ && ($.isString(_) ? _.split(",") : _).each(function ($) { this.addTag($, true) }, this) }, deleteTag: function (A) { var _ = this.getTagNode(A); if (this.onBeforeDeleteTag && this.onBeforeDeleteTag(A, _) == false) return false; if (_) { $(_).remove(); this.onDeleteTag.fire(this, this, A, _) } return !!_ }, deleteAll: function () { var $ = this.editor.$(".tag").remove(); $.each(function ($) { this.onDeleteTag.fire(this, this, $.tag, $) }, this) }, bindEvents: function () { var $ = this; this.editor.click(function () { $.input.focus(100) }); this.input.blur(function () { var _ = this.value.trim(); if (!_) return; if ($.addByInput(_) == false) this.value = "" }); this.input.keydown(function (C) { var A = $event.keyCode, _ = C.value.trim(); if (_ == "") { if (A == 8) { var B = this.input.previous()[0]; if (B && B.tag) this.deleteTag(B.tag) } return A != 13 } if (A != 13 && A != 188) return; if (!_) return false; $.addByInput(_); return false }, this) }, addByInput: function ($) { var _ = this.onAddByInput($); if (_ === false) return false; this.addTags(_); return true }, onAddByInput: function ($) { return $ }, createMember: function () { this.editor = this.editor || $(this.id ? "#" + this.id : ".tags-editor"); this.editor.addClass("tags-editor"); this.editor[0].editor = this; this.input = this.input ? $(this.input) : this.editor.$("input"); this.inputInEditor = this.editor.contains$(this.input[0]); if (this.input[0]) { this.form = $(this.input[0].form); if ($.ui.EmptyBox) new $.ui.EmptyBox({ input: this.input, emptyValue: this.emptyValue }) } } }) })(fly)