!function () { var _ = fly; _.doc.addClass(window.parent.withOrg ? "with-org" : "with-me"); fly.box.ACL = { manage: 1, open: 2, createDir: 4, upload: 16, download: 32, comment: 64, score: 256 }; fly.box.ACLTypes = { Role: "\u7528\u6237\u7ec4", Department: "\u90e8\u95e8", User: "\u7528\u6237" }; var C = _.base.getUserContext(null, false), B; function $() { B = _.getQuery("current", window.moreQuery ? "?" + window.moreQuery : null) || B || "general"; if (window.page && page.currentTabId) page.currentTabId = B } $(); var A = parent.manager ? parent.manager.paths.select("o=>o.name").join(" \xbb ") : "", D = { general: { name: "\u5e38\u89c4", saveText: "" }, unCompression: { name: "\u89e3\u538b", saveText: "\u5728\u7ebf\u89e3\u538b" }, comment: { name: "\u8bc4\u8bba", saveText: "" }, tags: { name: "\u5f52\u6863", saveText: "\u5f52\u6863" }, summary: { name: "\u6458\u8981/\u7f29\u7565\u56fe", saveText: "" }, acl: { name: "\u6743\u9650", saveText: "" }, openMessage: { name: "\u6253\u5f00\u65f6\u663e\u793a\u6d88\u606f" }, dirUploadMessage: { name: "\u4e0a\u4f20\u65f6\u663e\u793a\u6d88\u606f" }, importFile: { name: "\u5bfc\u5165", saveText: "\u5bfc\u5165" }, versions: { name: "\u5386\u53f2\u7248\u672c", saveText: "" }, statistics: { name: "\u7edf\u8ba1", url: "../log/stat/index.htm?$with-org={0}&fileId={{file.id}}&fileName={{file.name}}&fileType={{file.type}}".format(_.getQuery("$with-org")), target: "file-frame", focusAble: false} }; if (!C.user.isManager) delete D.importFile; _.box.FileComment = _.Class({ base: _.box.Comment }); _.box.FileMore = _.Class({ current: B, tabs: D, commentCount: 0, commentPageSize: 20, constructor: function () { this.createMembers(); this.bindEvents(); this.init() }, setFile: function (A) { this.file = A; this.fileId = A.id; $(); if (this.typeCls) _.doc.removeClass(this.typeCls); this.typeCls = "f-" + this.file.type; _.doc.addClass(this.typeCls); this.initInfos() }, init: function () { this.aclByInputs.click(this.showAclGrid.bind(this), null, null); this.aclFilterBox.keydown(this.filterAclObj.bind(this)); this.fixToMenu.on("click", this.fixFolder.bind(this)); this.defaultOpen.on("click", this.toggleDefaultOpen.bind(this)); this.btnSaveAutoCreateDir.click(this.saveAutoCreateDir.bind(this)); if (D.importFile) this.userSearchBox = new _.box.UserSearchBox({ input: "#import-user", onChange: function () { } }); var $ = frameElement.file; $ && this.setFile($) }, onBeforeSetTags: function ($) { this.createTagsEditor(); if ($ && this.initData) this.setTags(this.initData.exs.Tags) }, createTagsEditor: function () { if (this.tagsEditor) return false; this.tagsEditor = new fly.ui.TagsEditor({ id: "tags-editor", emptyValue: "\u591a\u4e2a\u76ee\u5f55\u4ee5\u7a7a\u683c\u6216\u9017\u53f7\u5206\u9694" }); _.post(_.box.ajaxUrl("tag", "GetRecommend"), function ($) { if (!$.success || (!$.data.myTags.length && !$.data.topTags.length)) { _("#tags-recommend").hide(); return } page.addRecommendTags($.data); if (page.initData) page.setTags(page.initData.exs.Tags) }).setLoading(this.defLoading) }, setTags: function ($) { if (!this.tagsEditor) return; this.tagsEditor.deleteAll(); this.tagsEditor.addTags($); this.applyRecommendTags() }, applyRecommendTags: function () { var $ = this.tagsEditor.getTags(); _("#tags-recommend label").each(function (_) { _.checked = $.contains(_.innerText); _.className = _.checked ? "checked" : "" }) }, toggleTag: function ($, A) { $.checked = !$.checked; _($)[$.checked ? "addClass" : "removeClass"]("checked"); this.tagsEditor[$.checked ? "addTag" : "deleteTag"](A) }, addRecommendTags: function ($) { var C = _("#tags-recommend"), B = "{@for o as tag }<label onclick=page.toggleTag(this,\"{tag}\") >{tag}</label>{for@}"; if ($.myTags.length) { var A = B.format($.myTags); C.append("<div>\u6700\u8fd1\uff1a</div>"); C.append(A) } if ($.topTags.length) { A = B.format($.topTags); C.append("<div>\u6700\u70ed\uff1a</div>"); C.append(A) } this.applyRecommendTags() }, editSummary: function () { var $ = prompt("\u8bf7\u8f93\u5165\u6458\u8981", this.initData.exs.Summary || ""); if ($ === null || $ == this.initData.exs.Summary) return; _.post(fly.box.ajaxUrl("SpaceFileEx", "SetSummary"), { summary: $, fileId: this.fileId }, this.saveSuccess).setLoading(this.defLoading) }, onBeforeSetSummary: function (A) { if (this.summaryInited && A != true) return; this.summaryInited = true; _("#file-thumb").remove(); this.summaryPreview.text("").removeClass("has-error"); this.summaryBox.text(this.initData.exs.Summary || ""); if (this.initData.exs.Summary) this.summaryBox.prepend("<label>\u6458\u8981\uff1a</label>"); this.summaryBox.append("<a href=# onclick=\"page.editSummary();return false\" class=\"submit-button {0}\" >\u7f16\u8f91\u6458\u8981</a>".format(this.initData.exs.Summary ? "has-summary" : "no-summary")); function $(A) { var $ = _("<div id=thumb-loading >\u52a0\u8f7d\u4e2d\u3002\u3002\u3002</div><img id=file-thumb src=\"{0}\" onload=$(\"#thumb-loading\").remove() onerror=$(\"#thumb-loading\").text(\"\u52a0\u8f7d\u5931\u8d25\uff01\") />".format(A)); _("#summary").append($) } if (this.file.type == "image") $("../ajax.ashx?$c=SpaceFile&$m=Thumb&size=800x200&max-length=512000&id={id}".format(this.file)); else if (this.file.ex == "ppt" || this.file.ex == "pptx" || this.file.ex == "pdf") $(_.box.ajaxUrl("SpaceFile", "GetPreviewImage", "id=" + this.file.id)); else _.get(_.box.ajaxUrl("SpaceFile", "GetPreview"), { id: this.file.id }, function ($) { if ($.success) { if ($.data) if ($.isDir) { if ($.data.children && $.data.children.length) { var A = ""; if ($.data.dirCount) A += "<label>\u4e0b\u7ea7\u6587\u4ef6\u5939\uff1a</label> {0}\u4e2a".format($.data.dirCount); if ($.data.fileCount) A += "<label>\u4e0b\u7ea7\u6587\u4ef6\uff1a</label> {0}\u4e2a".format($.data.fileCount); if ($.data.fileCount) A += "<label class=preview-title >\u5185\u5bb9\u9884\u89c8\uff1a</label> {0}".format($.data.children.join("\u3001 ")); page.summaryPreview.html(A) } else page.summaryPreview.html("<label>\u8be5\u6587\u4ef6\u5939\u76ee\u524d\u662f\u7a7a\u7684\u3002</label>") } else { page.summaryPreview[$.isText ? "text" : "html"]($.data); page.summaryPreview.prepend("<label class=preview-title >\u5185\u5bb9\u9884\u89c8\uff1a</label>") } } else { _("#summary-preview").html($.msg); _("#summary-preview").addClass("has-error") } }).setLoading(this.defLoading) }, _initInfos: function (A) { this.initData = A; _.each(A.exs, function ($, A) { $ && _("#" + A.camelCase()).val($); _("#a-" + A.camelCase())[$ ? "addClass" : "removeClass"]("setted") }); if (A.ACL) this.setACL(A.ACL); if ("fixToMenu" in A) { this.fixToMenu.val(true); if (A.fixToMenu) _("#fix-to-menu-name").text("\u4e3a\uff1a" + A.fixToMenu) } if (A.defaultOpen) this.defaultOpen.val(true); if (A.autoCreateDir) this.autoCreateDir.val(A.autoCreateDir); var $ = this.file.type == "folder" ? "\u6587\u4ef6\u5939" : "\u6587\u4ef6", B; if (this.file.type == "folder") B = "\u6587\u4ef6\u5939\u5df2\u5b58\u50a8 " + _.sizeFormat(A.fileInfo.size) + (A.fileInfo.maxSize ? "\uff0c\u6700\u5927\u5141\u8bb8\u5b58\u50a8 " + _.sizeFormat(A.fileInfo.maxSize) : "\uff0c\u5b58\u50a8\u5927\u5c0f\u65e0\u9650\u5236") + " <a onclick=\"fileMore.setMaxSize()\">\u8bbe\u7f6e\u5927\u5c0f\u9650\u5236</a>"; else B = "<label>{0}\u5927\u5c0f\uff1a</label>{1}".format($, _.sizeFormat(A.fileInfo.size)); _("#file-name").html("<label>{0}\u540d\u79f0\uff1a</label>{1}".format($, this.file.name)); _("#with-size").html(B); _("#with-tags").html((A.exs.Tags ? "<label>\u5f52\u6863\u76ee\u5f55\uff1a</label>" + A.exs.Tags : "\u672a\u5f52\u6863") + "<a onclick=\"fileMore.setCurrent('tags')\">\u5f52\u6863</a>"); _("#with-summary").html((A.exs.Summary ? "<label>\u6458\u8981\uff1a</label>" + A.exs.Summary : "\u672a\u8bbe\u7f6e\u6458\u8981") + "<a onclick=\"fileMore.setCurrent('summary')\">\u8bbe\u7f6e\u6458\u8981</a>"); this.setTags(A.exs.Tags) }, initInfos: function ($) { var A = this; _("#fix-to-menu").attr("checked", false); _("#default-open").attr("checked", false); _("#auto-create-dir").val(""); _("#openMessage").val(""); _("#dirUploadMessage").val(""); _("#import-path").val(""); _("#import-user").val(""); _("#del-imported").attr("checked", false); this.fixToMenu.attr("checked", false); this.defaultOpen.attr("checked", false); _("#fix-to-menu-name").text(""); _.post(fly.box.ajaxUrl("SpaceFile", "moreInfo"), { fileId: this.fileId, keys: $ || "Tags,Summary,OpenMessage,DirUploadMessage,ACL" }, function ($) { if (!$.success) _.alert($.msg); A._initInfos($.data); A.setCurrent(page.currentTabId == "statistics" ? "general" : page.currentTabId, true) }).setLoading(this.defLoading) }, setMaxSize: function () { var $ = this, A = $.initData.fileInfo.maxSize; _.prompt({ title: "\u8bbe\u7f6e\u6587\u4ef6\u5939\u5b58\u50a8\u9650\u5236", label: "\u5141\u8bb8\u5b58\u50a8\u7684\u6700\u5927\u503c(\u5355\u4f4dG)\uff0c\u8981\u53d6\u6d88\u9650\u5236\uff0c\u8bf7\u8f93\u5165\u7a7a\uff1a<br/>", maxLength: 10, isModal: true, value: A ? A / 1024 / 1024 / 1024 : "" }, function (B, A) { B = B.trim(); if (B == "") B = -1; else { if (B.match(/[^\d\.]/) || isNaN(new Number(B))) { _.alert("\u8bf7\u8f93\u6709\u8bef\uff0c\u8bf7\u8f93\u5165\u6570\u5b57\uff0c\u5355\u4f4dG\u3002"); return false } B = B * 1024 * 1024 * 1024 } _.post({ loading: { css: "f-loading", box: A.outer[0] }, url: fly.box.ajaxUrl("SpaceFile", "SetMaxSize"), data: { fileId: $.fileId, maxSize: B }, success: function (C) { if (C.success) { $.initData.fileInfo.maxSize = B < 0 ? null : B; $._initInfos($.initData); A.close() } else _.alert(C.msg) }, onError: _.onAjaxErr }); return false }, this.dWin) }, saveAutoCreateDir: function () { _.post({ loading: this.defLoading, url: fly.box.ajaxUrl("Folder", "SetAutoCreateDir"), data: { id: this.fileId, dirs: this.autoCreateDir.val() }, success: function ($) { $.msg && _.alert($.msg); if ($.success) page.autoCreateDir.val($.data) }, onError: _.onAjaxErr }) }, toggleDefaultOpen: function () { _.post({ loading: this.defLoading, url: fly.box.ajaxUrl("Folder", "ToggleDefaultOpen"), data: { id: this.fileId }, success: function ($) { $.msg && _.alert($.msg); if ($.success) page.defaultOpen.val($.data) }, onError: _.onAjaxErr }) }, fixFolder: function () { if (C.user.login == "admin" && !confirm("\u4f60\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\uff0c\u8be5\u64cd\u4f5c\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u7528\u6237\uff0c\u786e\u5b9a\u8981\u6267\u884c\u5417\uff1f")) return false; if ($event && $event.target && $event.target.checked) { var $ = prompt("\u8bf7\u8f93\u5165\u5728\u83dc\u5355\u4e2d\u663e\u793a\u7684\u540d\u79f0", this.file.name); if ($ == null) return false; if ($ == this.file.name) $ = null } _.post({ loading: this.defLoading, url: fly.box.ajaxUrl("Folder", "ToggleFixToMenu"), data: { id: this.fileId, name: $ }, success: function ($) { if ($.success) { try { var C = window.parent.parent.indexPage; if (!C) return } catch (A) { return } var B = window.parent.parent.$("#folder-menus"); C.loginInfo.folderMenus = $.data; C.reBuildFolderMenus(); _.flash(B) } else { _.alert($.msg); page.fixToMenu.val(!page.fixToMenu.is(":checked")) } }, onError: _.onAjaxErr }) }, setACL: function ($) { if (($ & fly.box.ACL.comment) == fly.box.ACL.comment) _.doc.addClass("can-comment"); if (C.user.isManager || ($ & fly.box.ACL.manage) == fly.box.ACL.manage) _.doc.addClass("can-manage") }, createTabs: function () { var $ = this; _.each(this.tabs, function (A, _) { $.topBar.append("<span id='a-{0}' for='{0}'><i></i>{1}</span>".format(_, A.name)) }); this.setCurrent(this.current) }, createMembers: function () { this.topBar = _("#top-bar"); this.topRightBar = _("#top-right-bar"); this.saveButton = _("#save"); this.defLoading = { box: _("#content-blocks")[0], css: "f-loading" }; this.aclBlock = _("#acl"); this.aclByInputs = _("#acl-by :radio"); this.aclFilterBox = _("#filter-acl-obj"); this.unCompression = _("#unCompression"); this.importMessage = _("#import-message"); this.generalBox = _("#general"); this.fixToMenu = _("#fix-to-menu"); this.defaultOpen = _("#default-open"); this.btnSaveAutoCreateDir = _("#save-auto-create-dir"); this.autoCreateDir = _("#auto-create-dir"); this.summaryPreview = _("#summary-preview"); this.summaryBox = _("#summary-box"); this.createTabs() }, setCurrent: function ($, E) { if (this.currentTabId == $ && E != true) return; var D = "onBeforeSet" + $.firstUpper(); if (this.currentTabId) _.doc.removeClass("tab-" + this.currentTabId); this.currentTabId = B = $; _.doc.addClass("tab-" + $); if (this[D] && this[D](E) === false) return; var A = this.tabs[$]; if (A.focusAble != false) { _.getBody()[0].className = this.current = $; _("#top-bar .current").removeClass("current"); _("#content-blocks .current").removeClass("current"); _("#a-" + $).addClass("current"); _("#" + $).addClass("current"); var C = A.saveText; if (C == "") this.saveButton.hide(); else this.saveButton.show().text(C || "\u4fdd\u5b58") } if (A.url) this.openUrl(A) }, openUrl: function ($) { if (!$.target || $.target == "_self") window.location.href = $.url; else if ($.target == "file-frame") _.common.openFrame(parent, $.url.format(this), { otherHtml: _.common.framePageCloseButton }) }, bindEvents: function () { var $ = this; this.topBar.$("span").click(function () { $.setCurrent(this.id.replace("a-", "")) }); _("#close-button").click(function () { parent.closeMore() }) }, clearACL: function ($) { var A = page.aclGrid.getOwnerRow($); _.post(_.box.ajaxUrl("FileAuth", "Clear" + this.aclObjType + "ACL"), { fileId: this.fileId, toId: A.record.Id }, function ($) { $.msg && alert($.msg); if ($.success) { page.reBuildACLRecord($.data[0], $.defACL, $.managerACL); _.extend(A.record, $.data[0]); A.reBuildUI() } }).setLoading(this.defLoading) }, changeACL: function ($, B, A) { _.post(_.box.ajaxUrl("FileAuth", "Set" + this.aclObjType + "ACL"), { fileId: this.fileId, toId: B, ACL: A, has: $.checked ? 1 : 0 }, function (_) { if (_.msg) alert(_.msg); if (_.success) { var A = page.aclGrid.getOwnerRow($); A.record.ACL = _.data; A.record.ACLBy = "|"; A.reBuildUI() } }).setLoading(this.defLoading) }, reBuildACLRecord: function (A, $, _) { if (A.ACL) { var B = A.ACL.split(":"); A.ACL = Number(B[0]); A.ACLBy = B[1] == "" ? "DEFAULT" : B[1] } else { A.ACL = A.IsManager ? _ : $; A.ACLBy = "DEFAULT" } A.isFull = A.ACL == this.fullAcl }, changeAllACL: function (A, B, C, D, $) { _.post(_.box.ajaxUrl("FileAuth", "SetAll" + this.aclObjType + "ACL"), { fileId: this.fileId, toIds: A, ACL: B, has: C }, function (_) { _.msg && alert(_.msg); if (_.success) if (D) page.showAclGrid($); else $ && $(_) }).setLoading(this.defLoading) }, aclSelHeaderClick: function (A) { var _ = A[0].checked, $ = fly.box.ACLTypes[this.aclObjType]; if (!confirm((_ ? "\u786e\u5b9a\u8981\u7ed9\u6240\u6709{0}\u6240\u6709\u6743\u9650\u5417\uff1f\uff1f" : "\u786e\u5b9a\u8981\u53d6\u6d88\u7ed9\u6240\u6709{0}\u6240\u6709\u6743\u9650\u5417\uff1f\uff1f").format($))) return; this.changeAllACL("*", 0, A[0].checked ? 1 : 0, function (B, $, A) { B && (A.columns[0].headerBox[0].checked = _) }) }, aclColHeaderClick: function (C, A) { var B = _(C).closest(".f-grid-hc"), D = this.aclGrid.rows.where("r=>r.cells[{0}].el.children()[0].checked!={1}".format(B[0].cellIndex, C.checked)); if (!D.length) return; var $ = D.select("r=>r.record.Id").join(","); this.changeAllACL($, A, C.checked ? 1 : 0, true, function (A, $, _) { A && _.columns[B[0].cellIndex].headerCell.$("input").attr("checked", C.checked) }) }, onAlcBoxClick: function ($, _) { this.changeAllACL(_.record.Id, 0, $[0].checked ? 1 : 0, false, function ($) { if ($.success) { _.record.ACL = $.data; _.record.ACLBy = "|"; _.record.isFull = _.record.ACL == page.fullAcl; _.reBuildUI() } }) }, showAclGrid: function (A) { var C = this.aclByInputs.filter(":checked"), E = C.attr("value").firstUpper(), $ = C.$("+").text(); this.aclFilterBox.value(""); if (this.aclGrid) { try { this.aclGrid.el.hide(true) } catch (B) { } } var D = this; _.post(_.box.ajaxUrl("FileAuth", "Get" + E + "Auth"), { fileId: this.fileId }, function (B) { if (D.aclGrid) { try { D.aclGrid.el.remove(); D.aclGrid.destory() } catch (C) { } } D.fullAcl = B.fullAcl; D.aclObjType = E; var G = 1; B.data.each(function ($) { D.reBuildACLRecord($, B.defACL, B.managerACL); G = G && ($.ACL == D.fullAcl) }); function F($) { return function (_, A) { return "<input onclick=\"page.changeACL(this,'{0}',{1})\" type=checkbox value={1} {2} />".format(A.record.Id, $, (A.record.ACL & $) == $ ? "checked" : "") } } function H($, _) { return "<label><input type=checkbox onclick=page.aclColHeaderClick(this,{0}) /></label>{1}".format($, _) } A && A(false, B.data); D.aclGrid = new _.ui.grid.GridPanel({ columns: [_.common.createSelection({ header: "", dataIndex: "isFull", headerClick: D.aclSelHeaderClick.bind(D), listeners: { boxclick: D.onAlcBoxClick.bind(D)} }), { dataIndex: "Name", header: $ }, { header: H(_.box.ACL.open, "\u6d4f\u89c8"), renderer: F(fly.box.ACL.open), css: "auth-cell" }, { header: H(_.box.ACL.download, "\u4e0b\u8f7d"), renderer: F(fly.box.ACL.download), css: "auth-cell" }, { header: H(_.box.ACL.upload, "\u4e0a\u4f20"), renderer: F(fly.box.ACL.upload), css: "auth-cell" }, { header: H(_.box.ACL.createDir, "\u521b\u5efa\u6587\u4ef6\u5939"), renderer: F(fly.box.ACL.createDir), css: "auth-cell" }, { header: H(_.box.ACL.comment, "\u8bc4\u8bba"), renderer: F(fly.box.ACL.comment), css: "auth-cell" }, { header: H(_.box.ACL.score, "\u8bc4\u5206"), renderer: F(fly.box.ACL.score), css: "auth-cell" }, { header: H(_.box.ACL.manage, "\u7ba1\u7406"), renderer: F(fly.box.ACL.manage), css: "auth-cell" }, { header: "", width: 250, dataIndex: "ACLBy", renderer: function (A, $) { if (E == "User") var _ = "<div id=acl-remark class=\"acl-by-{1}\">{0}{2}</div>".format(A ? (A == "DEFAULT" ? "\u5f53\u524d\u6743\u9650\u4e3a\u9ed8\u8ba4\u6743\u9650" : (A == "|" ? "\u5df2\u5355\u72ec\u8bbe\u7f6e\u6743\u9650" : "\u5f53\u524d\u6743\u9650\u4ece\u4e0a\u7ea7\uff08" + A + "\uff09\u7ee7\u627f")) : "\u5f53\u524d\u6743\u9650\u4ece\u90e8\u95e8\u3001\u7528\u6237\u7ec4\u7ee7\u627f", A ? (A == "DEFAULT" ? "def" : (A == "|" ? "self" : "parent")) : "DEFAULT", A != "|" ? "" : "<a class=submit-button onclick=\"page.clearACL(this)\">\u6e05\u9664\u6388\u6743</a>"); else _ = "<div id=acl-remark class=\"acl-by-{1}\">{0}{2}</div>".format(A == "|" ? "\u5df2\u5355\u72ec\u8bbe\u7f6e\u6743\u9650" : (A == "DEFAULT" ? "\u5f53\u524d\u6743\u9650\u4e3a\u9ed8\u8ba4\u6743\u9650" : "\u5f53\u524d\u6743\u9650\u4ece\u4e0a\u7ea7\uff08" + A + "\uff09\u7ee7\u627f"), A == "|" ? "self" : (A == "DEFAULT" ? "def" : "parent"), A != "|" ? "" : "<a class=submit-button onclick=\"page.clearACL(this)\">\u6e05\u9664\u6388\u6743</a>"); return _ } }], store: new _.data.Store({ idProperty: "Id", records: B.data }) }); D.aclGrid.render(D.aclBlock); if (G) D.aclGrid.columns[0].headerBox[0].checked = true; A && A(true, B.data, D.aclGrid) }).setLoading(this.defLoading) }, onBeforeSetAcl: function ($) { if (this.aclInited && $ != true) return; this.aclInited = true; this.showAclGrid() }, filterAclObj: function () { var $ = this; clearTimeout(this.aclFilterHandler); this.aclFilterHandler = setTimeout(function () { $.doFilterAclObj($.aclFilterBox.value().trim()) }, 1000) }, doFilterAclObj: function ($) { if ($ != this.previousSearchKey) { this.previousSearchKey = $; this.aclGrid.rows.each(function (_) { if ($ == "" || _.record.Name.indexOf($) > -1) _.el.show(); else _.el.hide() }) } }, onBeforeSetComment: function ($) { if (window.commentPage) { if (commentPage.getPageDataFilters.infoId != this.fileId) $ = true; commentPage.getPageDataFilters.infoId = this.fileId; if ($) commentPage.loadPageData(0); return } window.commentPage = new _.box.FileComment(); commentPage.render("#comment"); commentPage.getPageDataFilters = commentPage.postArgs = { infoId: this.fileId, type: "SpaceFile" }; commentPage.loadPageData("last"); commentPage.onShowComments(function () { window.open("#page-top", "_self") }) }, onBeforeSetImportFile: function () { this.progressMessage = this.importMessage; this.progressName = "\u5bfc\u5165"; this.progressType = "import" }, onBeforeSetUnCompression: function () { this.progressMessage = this.unCompression; this.progressName = "\u89e3\u538b"; this.progressType = "un-compression" }, onBeforeSetVersions: function ($) { if (this.versionsInited && $ != true) return; this.versionsInited = true; _("#versions").text(""); _.post(fly.box.ajaxUrl("SpaceFile", "GetVersions"), { id: this.fileId }, function ($) { $.msg && alert($.msg); if ($.success) { var A = $.data.select(function () { return "<li><a href=\"../file/open-doc.htm?id={Id}&show-list=0\" target=_blank >{Time.format(\"yyyy-MM-dd HH:mm\")} ---- {Name}</a></li>".format(this) }); _("#versions").html("<ul>{0}</ul>".format(A)) } }).setLoading(this.defLoading) }, saveSuccess: function ($) { if ($.success) { alert($.msg || "\u5df2\u4fdd\u5b58"); page.setFile(page.file) } else _.alert($.msg || "\u4fdd\u5b58\u5931\u8d25\u3002") }, clearLog: function ($) { _.post(_.box.ajaxUrl("SpaceFile", "ClearLog"), { fileId: this.fileId, type: $ || this.progressType }, function ($) { $.msg && alert($.msg); if ($.success) _(".log-list").remove() }) }, loadErrorLog: function ($) { _.post(_.box.ajaxUrl("SpaceFile", "GetLogList"), { fileId: this.fileId, type: $ || this.progressType }, function ($) { $.msg && alert($.msg); if ($.success && $.data) { _(".log-list").remove(); var A = $.data.select(function () { var $ = _.box.ajaxUrl("SpaceFile", "ShowLogList", "type=import&fileId={0}&log={1}".format(page.fileId, this)); return "<li><a href=\"{1}\" target=_blank >{0}</a></li>".format(this, $) }).join(" "); A = "<ul class=log-list ><div class=\"warning\" style=\"margin-bottom:5px\">\u8bf7\u6ce8\u610f\u65e5\u5fd7\u4ea7\u751f\u7684\u65f6\u95f4\uff01 <a class=submit-button onclick=page.clearLog() >\u6e05\u9664\u65e5\u5fd7</a></div>{0}</ul>".format(A); page.progressMessage.append(A) } }) }, showUnCompressionStatus: function (_, $) { _ = "<h3>{0}</h3>".format(_); if ($) _ += "<a href=# onclick=\"page.loadErrorLog();return false\" >\u67e5\u770b\u65e5\u5fd7</a>"; this.progressMessage.html(_) }, unCompressionProgress: function (G) { if (G == null) return false; var D = G.split("|"), $ = parseInt(D[1]), C = Number(D[2]), B = D[3], A = D[4]; if (G != this.previousUnCompProgress) { this.previousUnCompProgress = G; this.previousUnCompProgressTime = new Date() } else if (new Date() - this.previousUnCompProgressTime > 1000 * 30) { page.showUnCompressionStatus(this.progressName + "\u53ef\u80fd\u5df2\u7ecf\u5931\u8d25\u3002", true); return false } var E = false, F = ""; if (B == "OK") { F = this.progressName + "\u5b8c\u6bd5\uff0c\u5171\u6dfb\u52a0{0}\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\uff0c<a href=# onclick='{1};return false'>{2}</a>\u3002{3}".format(C, this.progressName == "\u89e3\u538b" ? "parent.manager.reloadFiles(true)" : "parent.manager.open(\"" + this.fileId + "\")", this.progressName == "\u89e3\u538b" ? "\u5237\u65b0\u6587\u4ef6\u5217\u8868" : "\u6253\u5f00\u6587\u4ef6\u5939", A == "0" ? "" : "{0}\u4e2a\u6587\u4ef6{1}\u5931\u8d25\uff0c\u67e5\u770b\u9519\u8bef\u660e\u7ec6\u8bf7\u70b9\u51fb\u201c\u67e5\u770b\u65e5\u5fd7\u201d\u3002".format(A, this.progressName)); E = A != "0" } else if (B == "UN") F = "{0}% \uff08{1}\uff09 \u6b63\u5728\u89e3\u538b {2}".format($, _.sizeFormat(C), A); else if (B == "ADD") F = "{0}% \uff08{1}\uff09 \u6b63\u5728\u6dfb\u52a0\u6587\u4ef6 {2}".format($, C, A); else if (B == "ERROR") { F = A; E = true } page.showUnCompressionStatus(F, E); return B != "OK" && B != "ERROR" }, monitorProgress: function () { _.post(fly.box.ajaxUrl("UnCompression", "GetUnCompressionInfo"), { fileId: this.fileId }, function ($) { if ($.msg) page.showUnCompressionStatus($.msg); if (page.unCompressionProgress($.data)) setTimeout(function () { page.monitorProgress() }, 1000) }) }, save_unCompression: function ($) { if (!window.confirm("\u89e3\u538b\u9700\u8981\u4e00\u4e2a\u8f83\u957f\u7684\u8fc7\u7a0b\uff0c\u5e76\u4e14\u4f1a\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6dfb\u52a0\u538b\u7f29\u5305\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u548c\u6587\u4ef6\u5939\uff0c\u4f60\u786e\u5b9a\u8981\u89e3\u538b\u5417\uff1f")) return; page.showUnCompressionStatus("\u6b63\u5728\u89e3\u538b\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\u3002\u3002\u3002"); _.post(fly.box.ajaxUrl("UnCompression", "UnCompression"), { fileId: this.fileId, re: $ ? 1 : 0 }, function ($) { if ($.data && $.data.unCompressioned) { if (window.confirm($.data.msg)) page.save_unCompression(true); else { page.showUnCompressionStatus($.data.progress); page.monitorProgress() } } else { if ($.msg) page.showUnCompressionStatus($.msg); if ($.success) if ($.data) page.unCompressionProgress($.data); else page.monitorProgress() } }).setLoading(this.defLoading) }, save_importFile: function (A) { var $ = { userId: this.userSearchBox.selectedValue, path: _("#import-path").val(), toDir: this.fileId, del: _("#del-imported")[0].checked ? 1 : 0, re: A ? 1 : 0 }; if (!$.path) { alert("\u8bf7\u6307\u5b9a\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002"); return } if (!$.userId) { alert("\u8bf7\u6307\u5b9a\u6587\u4ef6\u6240\u5c5e\u7528\u6237\u3002"); return } if (!window.confirm("\u5bfc\u5165\u9700\u8981\u4e00\u4e2a\u8f83\u957f\u7684\u8fc7\u7a0b\uff0c\u5e76\u4e14\u4f1a\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6dfb\u52a0{0}\u4e2d\u6240\u6709\u6587\u4ef6\u548c\u6587\u4ef6\u5939\uff0c\u4f60\u786e\u5b9a\u8981\u5bfc\u5165\u5417\uff1f".format($.path))) return; page.showUnCompressionStatus("\u6b63\u5728\u5bfc\u5165\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85\u3002\u3002\u3002"); _.post(fly.box.ajaxUrl("SpaceFile", "import"), $, function ($) { if ($.data && $.data.unCompressioned) { if (window.confirm($.data.msg)) page.save_importFile(true); else { page.showUnCompressionStatus($.data.progress); page.monitorProgress() } } else { if ($.msg) page.showUnCompressionStatus($.msg); if ($.success) if ($.data) page.unCompressionProgress($.data); else page.monitorProgress() } }).setLoading(this.defLoading) }, save_tags: function () { var $ = { fileId: this.fileId, tags: this.tagsEditor.getTags().join(",") }; _.post(fly.box.ajaxUrl("SpaceFileEx", "Set" + this.current), $, this.saveSuccess).setLoading(this.defLoading) }, save: function () { var $ = { fileId: this.fileId }; $[this.current] = _("#" + this.current).val(); _.post(fly.box.ajaxUrl("SpaceFileEx", "Set" + this.current), $, this.saveSuccess).setLoading(this.defLoading) }, submit: function () { if (this["save_" + this.current]) this["save_" + this.current](); else this.save() } }); _(function () { window.fileMore = window.page = new _.box.FileMore(); window.resetFile = function () { page.setFile(frameElement.file) } }) } ()