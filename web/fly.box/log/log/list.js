!function () { var A = fly, E = !!A.getQuery("$with-org"), $ = A.getQuery("start-time"), D = A.getQuery("end-time"), B = A.getQuery("userId"), C = A.getQuery("userName"), _ = [C].where("o=>o!=null").join("\u3001"); A.box.UploadList = A.Class({ name: "\u65e5\u5fd7", title: "\u7cfb\u7edf\u64cd\u4f5c\u65e5\u5fd7" + (_ ? "\uff08{0}\uff09".format(_) : ""), base: A.base.ListBase, module: "Log", startTime: $, endTime: D, userId: B, buttons: ['<span title=\u5f00\u59cb\u65f6\u95f4 class="form-control">' + '<input id=searchKey placeholder=\u641c\u7d22\u5173\u952e\u5b57 type="text" />' + "</span>", '<span title=\u5f00\u59cb\u65f6\u95f4 id="start-time" class="form-control input-append">' + '<input placeholder=\u5f00\u59cb\u65f6\u95f4 data-format="yyyy-MM-dd" type="text" style="width:100px" ondblclick="this.value=\'\'"/>' + '<span class="add-on">' + '<i data-time-icon="icon-time" data-date-icon="icon-calendar">' + "</i></span>" + "</span>", '<span title=\u7ed3\u675f\u65f6\u95f4 id="end-time" class="form-control input-append">' + '<input placeholder=\u7ed3\u675f\u65f6\u95f4 data-format="yyyy-MM-dd" type="text" style="width:100px" ondblclick="this.value=\'\'"/>' + '<span class="add-on">' + '<i data-time-icon="icon-time" data-date-icon="icon-calendar">' + "</i></span>" + "</span>", '<a onclick="page.query()">\u67e5\u8be2</a>'], pageUrl: A.base.ajaxUrl("Log", "AllAction"), defaultStoreArgs: { "start-time": $, "end-time": D, userId: B }, gridConfig: { columns: [A.common.createSelection(), { dataIndex: "User", header: "\u7528\u6237", renderer: function ($, _) { return "<a href=\"javascript:page.onlyUser('{1}','{0}')\">{0}</a>".format(_.record.User, _.record.UserId) } }, { dataIndex: "Time", header: "\u65f6\u95f4", renderer: function ($) { return $.format("yyyy-MM-dd HH:mm") } }, { dataIndex: "Remark", header: "\u64cd\u4f5c"}] }, onlyUser: function (_, B) { var $ = { "start-time": A("#start-time input").val(), "end-time": A("#end-time input").val(), userId: _, userName: B }; location.href = A.appendQuery($) }, query: function () { this.startTime = A("#start-time input").val(); this.endTime = A("#end-time input").val(); this.searchKey = A("#searchKey").val(); A.extend(this.store.params, { key: this.searchKey, "start-time": this.startTime, "end-time": this.endTime, userId: this.userId }); this.pager.go(1, true) }, onInit: function () { setTimeout(function () { page.startPicker = jQuery("#start-time").datetimepicker({ pickTime: false, language: "cn" }); page.endPicker = jQuery("#end-time").datetimepicker({ pickTime: false, language: "cn" }); page.startTime && A("#start-time input").val(page.startTime); page.endTime && A("#end-time input").val(page.endTime) }) } }); A.Style.loadCss("../../../fly.common/bootstrap/css/bootstrap.min.css"); A.Style.loadCss("../../../fly.common/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css"); A.loadScript("../../../fly.common/jQuery/jquery.js", function () { A.loadScript("../../../fly.common/bootstrap/js/bootstrap.min.js", function () { A.loadScript("../../../fly.common/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js", function () { window.page = new A.box.UploadList(); page.show() }) }) }) } ()